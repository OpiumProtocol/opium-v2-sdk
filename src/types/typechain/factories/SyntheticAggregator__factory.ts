/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type {
  SyntheticAggregator,
  SyntheticAggregatorInterface,
} from "../SyntheticAggregator";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_changer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_newRegistryAddress",
        type: "address",
      },
    ],
    name: "LogRegistryChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "margin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endTime",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "params",
            type: "uint256[]",
          },
          {
            internalType: "address",
            name: "oracleId",
            type: "address",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "address",
            name: "syntheticId",
            type: "address",
          },
        ],
        indexed: true,
        internalType: "struct LibDerivative.Derivative",
        name: "derivative",
        type: "tuple",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "derivativeHash",
        type: "bytes32",
      },
    ],
    name: "LogSyntheticInit",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_derivativeHash",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "margin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endTime",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "params",
            type: "uint256[]",
          },
          {
            internalType: "address",
            name: "oracleId",
            type: "address",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "address",
            name: "syntheticId",
            type: "address",
          },
        ],
        internalType: "struct LibDerivative.Derivative",
        name: "_derivative",
        type: "tuple",
      },
    ],
    name: "getMargin",
    outputs: [
      {
        internalType: "uint256",
        name: "buyerMargin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "sellerMargin",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getRegistry",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_derivativeHash",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "margin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endTime",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "params",
            type: "uint256[]",
          },
          {
            internalType: "address",
            name: "oracleId",
            type: "address",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "address",
            name: "syntheticId",
            type: "address",
          },
        ],
        internalType: "struct LibDerivative.Derivative",
        name: "_derivative",
        type: "tuple",
      },
    ],
    name: "getSyntheticCache",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "buyerMargin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "sellerMargin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "authorCommission",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "authorAddress",
            type: "address",
          },
          {
            internalType: "bool",
            name: "init",
            type: "bool",
          },
        ],
        internalType: "struct SyntheticAggregator.SyntheticCache",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_registry",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_registry",
        type: "address",
      },
    ],
    name: "setRegistry",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class SyntheticAggregator__factory {
  static readonly abi = _abi;
  static createInterface(): SyntheticAggregatorInterface {
    return new utils.Interface(_abi) as SyntheticAggregatorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SyntheticAggregator {
    return new Contract(address, _abi, signerOrProvider) as SyntheticAggregator;
  }
}
